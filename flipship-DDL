-- Create extension uuid if not exists
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Create Role enum
CREATE TYPE "Role" AS ENUM ('Admin', 'Staff', 'Company', 'Coordinator', 'Driver', 'Customer');

-- Table Account
CREATE TABLE "Account" (
    "accountID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    email VARCHAR(255) UNIQUE NOT NULL,
    password TEXT NOT NULL,
    status VARCHAR(50) DEFAULT 'active',
    role "Role" NOT NULL, -- Added Role enum
    "createdAt" TIMESTAMPTZ DEFAULT NOW(),
    "updatedAt" TIMESTAMPTZ DEFAULT NOW()
);

-- Table Customer
CREATE TABLE "Customer" (
    "customerID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "accountID" UUID UNIQUE,
    "phoneNumber" VARCHAR(20),
    "fullName" VARCHAR(255),
    "address" VARCHAR(500),
    "updatedAt" TIMESTAMPTZ DEFAULT NOW(),
    FOREIGN KEY ("accountID") REFERENCES "Account"("accountID") ON DELETE SET NULL
);

-- Table Company
CREATE TABLE "Company" (
    "companyID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "accountID" UUID UNIQUE,
    "picFullName" VARCHAR(255),
    "companyName" VARCHAR(255),
    "taxCode" VARCHAR(100),
    "contactEmail" VARCHAR(255),
    "updatedAt" TIMESTAMPTZ DEFAULT NOW(),
    status VARCHAR(50) DEFAULT 'inactive',
    FOREIGN KEY ("accountID") REFERENCES "Account"("accountID") ON DELETE SET NULL
);

-- Table Coordinator
CREATE TABLE "Coordinator" (
    "coordinatorID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "accountID" UUID UNIQUE,
    "companyID" UUID NOT NULL,
    "fullName" VARCHAR(255),
    "employeeCode" VARCHAR(15),
    "phoneNumber" VARCHAR(15),
    "updatedAt" TIMESTAMPTZ DEFAULT NOW(),
    FOREIGN KEY ("accountID") REFERENCES "Account"("accountID") ON DELETE SET NULL,
    FOREIGN KEY ("companyID") REFERENCES "Company"("companyID") ON DELETE SET NULL
);

-- Table Driver
CREATE TABLE "Driver" (
    "driverID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "accountID" UUID UNIQUE,
    "companyID" UUID NOT NULL,

    "licenseNumber" VARCHAR(50) NOT NULL,
    "vehicleType" VARCHAR(100), -- e.g., Truck, Van, Motorcycle
    "licenseExpiry" DATE,
    "phoneNumber" VARCHAR(15),
    "licenseLevel" VARCHAR(15),
    "fullName" VARCHAR(100),
    "identityNumber" VARCHAR(100),
    "updatedAt" TIMESTAMPTZ DEFAULT NOW(),
    FOREIGN KEY ("accountID") REFERENCES "Account"("accountID") ON DELETE SET NULL,
    FOREIGN KEY ("companyID") REFERENCES "Company"("companyID") ON DELETE SET NULL

);

-- Table Staff
CREATE TABLE "Staff" (
    "staffID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "accountID" UUID UNIQUE,
    "fullName" VARCHAR(255),
    "department" VARCHAR(100), -- e.g., HR, IT, Operations
    "employeeCode" VARCHAR(50) NOT NULL,
    "createdAt" TIMESTAMPTZ DEFAULT NOW(),
    FOREIGN KEY ("accountID") REFERENCES "Account"("accountID") ON DELETE SET NULL
);

-- Table Admin
CREATE TABLE "Admin" (
    "adminID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "accountID" UUID UNIQUE,
    "fullName" VARCHAR(255),
    "accessLevel" VARCHAR(50) NOT NULL, -- e.g., SuperAdmin, Moderator
    "lastLogin" TIMESTAMPTZ,
    "createdAt" TIMESTAMPTZ DEFAULT NOW(),
    FOREIGN KEY ("accountID") REFERENCES "Account"("accountID") ON DELETE SET NULL
);

-- Create Status enum for Application
CREATE TYPE "ApplicationStatus" AS ENUM ('PENDING', 'APPROVED', 'REJECTED');
CREATE TYPE "ApplicationType" AS ENUM ('REQUEST_DRIVERS_ACCOUNT', 'REQUEST_BECOME_COMPANY', 'OTHER');

-- Create Table Application
CREATE TABLE "Application" (
    "applicationID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "senderID" UUID NOT NULL, -- References Account except Staff
    "staffID" UUID, -- References Staff if receiver is Staff
    "createdAt" TIMESTAMPTZ DEFAULT NOW(),
    "reviewedAt" TIMESTAMPTZ DEFAULT NOW(),

    "senderNote" VARCHAR(1000) NOT NULL,
    "senderFileUrl" VARCHAR(255),

    "staffNote" VARCHAR(1000),
    "staffFileUrl" VARCHAR(255),
    "status" "ApplicationStatus" NOT NULL DEFAULT 'PENDING',
    "type" "ApplicationType" NOT NULL,

    FOREIGN KEY ("senderID") REFERENCES "Account"("accountID") ON DELETE SET NULL,
    FOREIGN KEY ("staffID") REFERENCES "Staff"("staffID") ON DELETE SET NULL
);

